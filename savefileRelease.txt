
# Edit file (defaults to savefile)
P(1,savefile) =file
call "Lib:e" (file)
/e

# savefiles to include in release
"Code Lib Overview Release KVM".split->x out("savefile"+x+".txt")
/IncludedSavefiles


# Project home directory
savefile.dir
/HomeDir


# Identify savefiles to move to TargetDir
IncludedSavefiles =list
HomeDir.files(Glob("savefile*"))->f
	reject(list.contains(f.name))
	out(f)
/FilesToMove



# Move savefiles not included in release to TempDir, then run GIT commit before restoring the files
# ---
# Create temp-dir
	Dir("/tmp/release"+currentTimeMillis) =d
	when (!d.exists, d.create)
	d =TempDir
#
# Move files to TempDir
	FilesToMove->f
		println("Copying file " + f.name + " to " + TempDir.path)
		when (!TempDir.copy(f), error("Failed to copy file"))
		println("Deleting file " + f.name)
		f.delete
	|
#
# Run git
	HomeDir.run("git","add",".")
	gs
	Input("Commit message?").get =msg
	HomeDir.run("git","commit","-m",msg)
#
# Restore files
	TempDir.files->f
		println("Restoring file " + f.name)
		when (!HomeDir.copy(f), error("Failed to restore file from " + TempDir.path))
		f.delete
	|
/Commit


HomeDir.run("git","push","origin","master")
/Push


# Call Commit then run git to push update to github
Commit
Push
/PushUpdate



# Git status
HomeDir.run("git","status")
/gs

# Git diff
HomeDir.run("git","diff")
/gd


