<<<<<<<<<<<<<<<<<<<<<<< EOF



Lists
------

Lists are created by global List() function, but are
also frequently the return value from other functions.

Examples:

List(1,2,3)

- Creates list object with values 1, 2 and 3


Dir.files

- Returns list of files in current directory


Dir.file("x.txt").read

- Returns lines of text in file x.txt in current dir


"a:b:c".split(":")

- Split string on delimiter ":"


"abc".chars

- Get list of characters in string


>>>>>>>>>>>>>>>>>>>>>>> EOF
	=> lines
	Intro:Logo
	Sys.sleep(5000)	
	Intro:Present(lines)
/intro




# Loops and filtering
# --
<<<<<<<<<<<<<<<<<<<<<<<< EOF

Loops: for-each
----------------

CFT has a construct for iterating over all
elements in a list, and a special statement out()
to generate a result.

This is used to filter or modify data.


List(1,2,3) -> x out(x+10)

This generates a list of integers 11, 12, 13.


Filtering
---------

The above shows unconditional calls to out(), but
adding conditions, the loop becomes a filter.

The most used way is by means of assert, reject and
break.


List(1,2,3,4)->x assert(x%2==0) out(x)

This results in only values 2 and 4 getting passed to
the out().


- Alternatively:

List(1,3,3,4)->x reject(x%2 != 0) out(x)


The assert() statement fetches next value in current
loop, if condition fails.

The reject() does the opposite.

Finally there is break() which terminates the current
loop.


List(1,2,3,4)->x break(x==3) out(x)

This generates list of values 1 and 2 only.

>>>>>>>>>>>>>>>>>>>>>>>> EOF
	=> lines
	Intro:Present(lines)
/looping



