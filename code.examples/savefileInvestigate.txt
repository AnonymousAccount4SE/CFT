# License
<<< EOF
#
# CFT - an interactive programmable shell for automation 
# Copyright (C) 2020 Roar Foshaug
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>
#
>>> EOF
/License

# Readme
<<< EOF
-------------------------------------------------------------------
Creating an investigation log when working with finding out why
a system behaves as it does. Uses Sys.lastResult to obtain
data.

To start new log or save existing, just open the LogFile
in an editor.
-------------------------------------------------------------------
>>> EOF
/Readme


File(".investigate")
/LogFile



# Input mode
loop
	readLine("Enter text, or .[xxx] for paste, '..c', '..m', '..e' or '..q' or just '..' for quit").trim =line
	false =terminate
	false =done
	when(line=="",{LogFile.append("")})
	reject(line=="")

	when(line.startsWith(".."), {
		line.sub(2)=cmd
		when(cmd.startsWith("c"),{  ## cat
			{Lib.Data.each(0,10)->x println}
			{LogFile.read->line println(line)}
			true =done
		})
		when(cmd.startsWith("m"),{ ## more
			{Lib.Data.each(0,10)->x println}
			Show
			true =done
		})
		when(cmd.startsWith("e"),{ ## edit
			Edit
			true =done
		})
		when(cmd=="" || cmd.startsWith("q"),{ ## quit
			true =terminate
		})
	})
	break(terminate)
	assert(!done)
	(line.startsWith(".."))
	if (line.startsWith("."), {
		line.sub(1)=marker
		if(marker=="",".",marker)=marker
		println("End-marker: '" + marker + "'")
		readLines(marker) =lines
		List =list
		list.add("")
		{lines->line list.add("# " + line)}
		list.add("")
		LogFile.append(list)
	},{
		LogFile.append(Date.fmt + " " + line)
	})
/InputMode




# Log data
	Sys.lastResult =res
	res.?nth =isList

	when(isList,{
		readLine("Element number (Enter for all)") =num
		when(num.?parseInt, {res.nth(num.parseInt) =res})
	})

	List =list
	list.add("")	
	res->x 
		list.add("# " +x) 
	|
	list.add("")
	LogFile.append(list)
/LogData


# Log text
	List("","D:"+Date.fmt) =list

	readLine("Comment") =line
	LogFile.append(Date.fmt + " " + line)
/LogText


# Log pasted text
	readLine("End marker") =endMarker
	readLines(endMarker) =lines
	
	List =list
	list.add("")
	lines->line list.add("# " + line) |
	list.add("")
	LogFile.append(list)
/LogPastedText



call "Lib:m" (LogFile)
/Show

call "Lib:e" (LogFile)
/Edit

