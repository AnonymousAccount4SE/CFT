# Readme
# --
<<<< EOF
Run on host with passwordless ssh access to hosts

https://www.youtube.com/watch?v=U1VzcjCB_sY&t=1770s
>>>> EOF
/Readme


# Master hosts
# --
	List("k1.v")
/masterHosts

# Worker hosts
# --
	List("k2.v")
/workerHosts

# All hosts
# --
	masterHosts+workerHosts
/allHosts

# ssh user name
# --
	Db2:Get(Sys.scriptId,"ssh-user") => name
	if (name==null) {
		Input("ssh user name").get => name
		Db2:Set(Sys.scriptId,"ssh-user",name)
	}
	name
/sshUser


# Step 1 - update + install qemu-guest-agent
# --
	allHosts->h	
		target=sshUser+"@"+h
		Sequence(
			@ apt-get update
			@ apt install qemu-guest-agent -y
		)->cmd
			println(h + ": " + cmd)
			SSH:sudo(target,cmd,false,false)
/step1

# Step 2 - container runtime
# --
	allHosts->h	
		target=sshUser+"@"+h
		Sequence(
			@ apt install containerd -y
			@ systemctl status containerd
			@ mkdir /etc/containerd
			@ containerd config default > /etc/containerd/config.toml
		)->cmd
			println(h + ": " + cmd)
			SSH:sudo(target,cmd,false,true)
/step2

# Step 3 - modify containerd config
# --
	allHosts->h	
		target=sshUser+"@"+h
		file=Lib:TmpFile("x")

		Dir.run("scp", target+ ":/etc/containerd/config.toml", file.path)
		
		modifiedLines = Inner {
			enable=false
			file.read->line
				if (line.contains("runc.options")) enable=true
				if (enable) {
					if (line.contains("SystemdCgroup")) {
						out(line.replace("false","true"))
						enable=false
					} else {
						out(line)
					}
				} else {
					out(line)
				}
		}

		file.create(modifiedLines)
		Dir.run("scp", file.path, target+":./config.toml")  # home dir
		file.delete

		SSH:sudo(target,"cp ./config.toml /etc/containerd/config.toml")
/step3



# Turn off swapping
# --
    P(1,GetTarget) => target
    P(2, false) => debug

    println(""+target+": turning off swap")
    SSH:sudo(target,'swapoff -a', false, debug)

    # Also need to modify /etc/fstab, using CFT on remote host
    Java:VerifyCFT(target)
    Date.setFormat("yyyy-MM-dd").fmt => today

    cftScript=Lib:TmpFile("cft")
    cftScript.create(Sequence(
        @ File("/etc/fstab")=>f
        @ File("fstab.txt.backup_<<today>>").copyFrom(f)
        @ f.read->line
        @    if (line.split.contains("swap"))
        @       out("# " + line)
        @    else
        @       out(line)
        @ | => newLines
        @ f.create(newLines)
        @ /run
    ).mergeExpr)
    SSH:copy(cftScript, target, "./CFT/savefileTest.txt")
    SSH:sudo(target, './RunCFT Test run ":quit"', false, false)
    cftScript.delete
//SwappingOff



# Step 4 - disable swap
# --
	allHosts->h	
		target=sshUser+"@"+h
		SwappingOff(target)
/step4


# Step5 - ip forwarding
# --
	allHosts->h
		target=sshUser+"@"+h
		cftScript=Lib:TmpFile("cft")
		cftScript.create(Sequence(
			@ File("/etc/sysctl.conf") => f
			@ f.read->line
			@    if (line.startsWith("#net.ipv4.ip_forward=1"))
			@       out(line.replace("#",""))
			@    else 
			@       out(line)
			@ | =>newLines
			@ f.create(newLines)
			@ /run
		).mergeExpr)
  	 	SSH:copy(cftScript, target, "./CFT/savefileIpForward.txt")
    	SSH:sudo(target, './RunCFT IpForward run ":quit"', false, false)
		cftScript.delete
/step5
		
		
