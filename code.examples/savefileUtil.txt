
# Show content of dictionary
# --
P(1)=>dict
	dict.keys.sort->key
		report(key,dict.get(key))
/ShowDict


# Create / access counter
# --
P(1) => name
P(2,9999999999999999) => maxValue
	error(name==null,"P(1) name missing")
	
	id="counter:"+(name.replace(" ","_"))
	i = Db2:Get("Util", id, 0)
	
	next=(i+1) % maxValue
	Db2:Set("Util",id,next)
	i
/Counter
	



# Set time mark
# --
P(1) => name
	id="counter:"+(name.replace(" ","_"))
	Db2:Set("Util", id, Date)
/SetTimeMark



# Check time mark 
# --
P(1) => name
P(2,3600) => seconds
	Date.sub(Date.Duration.seconds(seconds)) => limit

	id="counter:"+(name.replace(" ","_"))
	val = Db2:Get("Util", id)

	val==null || val.before(limit)
/HasTimedOut
	



# Show file without comment lines
# --
P(1) => file
P(2,"#") => commentStart
	file.read->line
		s=line.trim
		reject(s.startsWith(commentStart) || s=="")
		out(line)
/UncommentFile


# Select file from directory
# --
P(1) => dir
P(2,"*") => globPattern
	i=0
	files = dir.files(Glob(globPattern))
	files->f 
		println(""+i + ": " + f.name)
		i=i+1
	|
	result=null
	tryCatch({
		readLine("Enter index / blank for none").parseInt => i
		result=files.nth(i)
	})
	result
/SelectFile


