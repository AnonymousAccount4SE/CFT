<<< EOF
Color and cursor control with ANSI Escape sequences.
>>> EOF
/Readme

# Enable use of ANSI escape sequences (default)
# --
P(1,true)=>enabled
	Db2:Set("Curses","Enabled",enabled)
/Enable



# Is curses enabled?
# --
	Db2:Get("Curses","Enabled",true)
/ena


Sys.uchar("1b")
/Esc


if(ena,Esc+"[0m","")
/Reset



if(ena,Esc+"[30m","")
/TxtBlack

if(ena,Esc+"[31m","")
/TxtRed

if(ena,Esc+"[32m","")
/TxtGreen

if(ena,Esc+"[33m","")
/TxtYellow

if(ena,Esc+"[34m","")
/TxtBlue

if(ena,Esc+"[35m","")
/TxtMagenta

if(ena,Esc+"[36m","")
/TxtCyan

if(ena,Esc+"[37m","")
/TxtWhite


# Select text color
# --
	P(1,false)=>override

	SymDict(TxtBlack, TxtRed, TxtGreen, TxtYellow, TxtBlue, TxtMagenta, TxtCyan, TxtWhite) => colors
	col = Db2:Get("Curses","TxtColor")
	if (override) col=null

	if (col==null) Inner {
		Lib:Header("Enter color by name")
		colors.keys.sort->key
			println(key)
		|
		println
		readLine => col
		
		println(colors.get(col)+"Changed text color!")
		println("Okay? (type 'yes')")
		if(readLine=="yes") {
			Db2:Set("Curses","TxtColor", col)
		}
	} else {
		println
		println("- Changing to " + colors.get(col) + "default text color!")
		println("- To select another color, call Curses:SelectTextColor(true)")
		println
	}
/SelectTextColor


if(ena) {
	Esc+"[2J"
} else {
	nl=if(Sys.isWindows,"^r^n".unEsc, "^n".unEsc)
	Inner {
		Lib.Data.yes(Cfg.h,nl) | _.concat
	}
}
/Cls

if(ena,Esc+"[H","")
/Home


Cls+Home
/Clear


if(ena,Esc+"[1m","")
/Bold

if(ena,Esc+"[4m","")
/Underline

if(ena,Esc+"[7m","")
/Reversed





P(1,1)=>n
if(ena,Esc+"["+n+"A","")
/CurUp

P(1,1)=>n
if(ena,EscEsc+"["+n+"B","")
/CurDown

P(1,1)=>n
if(ena,Esc+"["+ n +"C","")
/CurRight

P(1,1)=>n
if(ena,Esc+"["+n+"D","")
/CurLeft



P(1,1)=>x
P(2,1)=>y
	if(ena,
		Home+CurRight(x-1)+CurDown(y-1),
		"")
/CurGoto




P(1)=>char
P(2)=>count
	Lib.Data.yes(count,char) | _.concat
/Seq




P(1,10)=>x1
P(2,5)=>y1
P(3,50)=>x2
P(4,12)=>y2
	if(ena) Inner {
		w=x2-x1-1
		top=Sys.uchar("2554")+Seq(Sys.uchar("2550"),w)+Sys.uchar("2557")
		mid=Sys.uchar("2551")+Seq(" ",w) + Sys.uchar("2551")
		bot=Sys.uchar("255a")+Seq(Sys.uchar("2550"),w)+Sys.uchar("255d")
		Lib.Data.each(y1,y2)->y
			pre=CurGoto(x1,y)
			if (y==y1) println(pre+top)
			else if (y==y2) println(pre+bot)
			else println(pre+mid)
	} else {
		println
	}
/Box
		



println(Cls+Home+TxtBlue+"WARNING"+Reset+"This is a test")
println(Bold+"ERROR: "+Reset+"Xyz")
println(CurDown(10)+CurLeft(10)+"Test")
#println(Reversed+Cls+Home)
Box(10,5,32,12)
/t

