# License
<<< EOF
#
# CFT - an interactive programmable shell for automation 
# Copyright (C) 2020-2022 Roar Foshaug
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>
#
>>> EOF
/License


# Help text
<<< EOF
------------------------------------------------------------------
Generate MD version of Doc.html
------------------------------------------------------------------
>>> EOF
/doc



Sys.homeDir.sub("doc")
/DocDir


DocDir.file("Doc.html")
/Source

false =>enable
Source.read->line
    false =>skipThis
    if(line.contains("<body"), Inner{ true =>enable true =>skipThis })
    if(line.contains("</body"), Inner{false =>enable })
    assert(enable && !skipThis)
    line.trim =>s
    assert(s.length>0)
    out(s)  
/Lines


# Split Lines into parts
# Uses newline as special character
"^n".unEsc =>NL
Lines->line
    line.replace("<",NL+"<").replace(">",">"+NL).split(NL)->part out(part)
/Parts




"(NEWLINE)"
/NL

"(JOIN)"
/JOIN

"(PREJOIN)"
/PREJOIN


# Replace by tags
List(
    Str("<h1","# "+JOIN),
    Str("<h2","## "+JOIN),
    Str("<h3","### "+JOIN),
    Str("<h4","#### "+JOIN),
    Str("</h",NL),
    Str("<pre","```"+NL),
    Str("</pre","```"+NL),
    Str("<p",NL),
    Str("</p",NL),
    Str("<ul", NL),
    Str("</ul",NL),
    Str("<ol", NL),
    Str("</ol",NL),
    Str("<li", NL+"- "+JOIN),
    Str("</li>", NL),
    Str("<em","**"),
    Str("</em",PREJOIN+"**"),
    Str("<b","**"),
    Str("</b",PREJOIN+"**"),
    Str("<i","**"),
    Str("</i",PREJOIN+"**")
) =>rules
Parts->p
    Inner{
        null =>result
        rules->r 
            if(p.startsWith(r), Inner{r.data =>result})
            break(result != null)
        |
        result
    } =>result
    if(result != null, result, p+NL) =>result
    out(result)
/ProcessTags
        

ProcessTags.concat =>str
Dict
    .set(NL+PREJOIN,"")
    .set(JOIN+NL,"^n".unEsc)
    =>data
str.merge(data) =>str
#
Dict
    .set(NL,"^n".unEsc)
    .set(JOIN,"")
    =>data
str.merge(data) =>str
Dict
    .set("&lt;","<")
    .set("&gt;",">")
    =>data
str.merge(data) =>str
List(
    "NOTE: This file is autogenerated from " + Source.name + ".",
    "There may be various formatting problems, particularly example code.",
    "",
    "If you have problems, consider viewing the " + Source.name + " file instead.",
    "",
    "") =>prefix
DocDir.file("Doc.md").create(prefix+str)
/Run



