# License
<<< EOF
#
# CFT - an interactive programmable shell for automation 
# Copyright (C) 2020 Roar Foshaug
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>
#
>>> EOF
/License


# Help text
<<< EOF
------------------------------------------------------------------
Generate MD version of Doc.html
------------------------------------------------------------------
>>> EOF
/doc



Sys.savefile.dir.sub("..").sub("doc")
/DocDir


DocDir.file("Doc.html")
/Source

false =enable
Source.read->line
	false =skipThis
	when (line.contains("<body"), { true =enable true=skipThis })
	when (line.contains("</body"), {false =enable })
	assert(enable && !skipThis)
	line.trim =s
	assert(s.length>0)
	out(s)	
/Lines


# Split Lines into parts
# Uses newline as special character
"^n".unEsc =NL
Lines->line
	line.replace("<",NL+"<").replace(">",">"+NL).split(NL)->part out(part)
/Parts




"(NEWLINE)"
/NL

"(JOIN)"
/JOIN

"(PREJOIN)"
/PREJOIN


# Replace by tags
List(
	Str("<h1","# "+JOIN),
	Str("<h2","## "+JOIN),
	Str("<h3","### "+JOIN),
	Str("<h4","#### "+JOIN),
	Str("</h",NL),
	Str("<pre","```"+NL),
	Str("</pre","```"+NL),
	Str("<p",NL),
	Str("</p",NL),
	Str("<ul", NL),
	Str("</ul",NL),
	Str("<ol", NL),
	Str("</ol",NL),
	Str("<li", NL+"- "+JOIN),
	Str("</li>", NL),
	Str("<em","**"),
	Str("</em",PREJOIN+"**"),
	Str("<b","**"),
	Str("</b",PREJOIN+"**"),
	Str("<i","**"),
	Str("</i",PREJOIN+"**")
)=rules
Parts->p
	{
		null =result
		rules->r 
			when(p.startsWith(r), {r.data =result})
			break(result != null)
		|
		result
	} =result
	if (result != null, result, p+NL) =result
	out(result)
/ProcessTags
		

ProcessTags.concat =str
Dict
	.set(NL+PREJOIN,"")
	.set(JOIN+NL,"^n".unEsc)
	=data
str.merge(data) =str
#
Dict
	.set(NL,"^n".unEsc)
	.set(JOIN,"")
	=data
str.merge(data) =str
Dict
	.set("&lt;","<")
	.set("&gt;",">")
	=data
str.merge(data) =str
DocDir.file("Doc.md").create(str)
/Run



