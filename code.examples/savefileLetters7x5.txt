<<<<<< EOF

0  ###    .
0 #   #   .
0 #  ##   .
0 # # #   .
0 ##  #   .
0 #   #   .
0  ###    .

1   ###   .
1  #  #   .
1     #   .
1     #   .
1     #   .
1     #   .
1     #   .

2  ###    .
2 #   #   .
2    #    .
2   #     .
2  #      .
2 #       .
2 #####   .

3  ###    .
3 #   #   .
3     #   .
3   ##    .
3     #   .
3 #   #   .
3  ###    .

4 #   #   .
4 #   #   .
4 #   #   .
4 #####   .
4     #   .
4     #   .
4     #   .

5 #####   .
5 #       .
5 #       .
5 ####    .
5     #   .
5 #   #   .
5  ###    .

6  ###    .
6 #   #   .
6 #       .
6 ####    .
6 #   #   .
6 #   #   .
6  ###    .

7 #####   .
7     #   .
7    #    .
7   #     .
7   #     .
7  #      .
7 #       .

8  ###    .
8 #   #   .
8 #   #   .
8  ###    .
8 #   #   .
8 #   #   .
8  ###    .

9  ###    .
9 #   #   .
9 #   #   .
9  ####   .
9     #   .
9 #   #   .
9  ###    .

A  ###    .
A #   #   .
A #   #   .
A #####   .
A #   #   .
A #   #   .
A #   #   .

B ####    .
B #   #   .
B #   #   .
B ####    .
B #   #   .
B #   #   .
B ####    .

C  ###    .
C #   #   .
C #       .
C #       .
C #       .
C #   #   .
C  ###    .

D ####    .
D #   #   .
D #   #   .
D #   #   .
D #   #   .
D #   #   .
D ####    .

E #####   .
E #       .
E #       .
E ###     .
E #       .
E #       .
E #####   .

F #####   .
F #       .
F #       .
F ###     .
F #       .
F #       .
F #       .

G  ###    .
G #   #   .
G #       .
G #  ##   .
G #   #   .
G #   #   .
G  ###    .

H #   #   .
H #   #   .
H #   #   .
H #####   .
H #   #   .
H #   #   .
H #   #   .

I   #     .
I   #     .
I   #     .
I   #     .
I   #     .
I   #     .
I   #     .

J     #   .
J     #   .
J     #   .
J     #   .
J     #   .
J #   #   .
J  ###    .

K #   #   .
K #  #    .
K # #     .
K ##      .
K # #     .
K #  #    .
K #   #   .

L #       .
L #       .
L #       .
L #       .
L #       .
L #       .
L #####   .

M #   #   .
M ## ##   .
M # # #   .
M #   #   .
M #   #   .
M #   #   .
M #   #   .

N #   #   .
N ##  #   .
N ##  #   .
N # # #   .
N # # #   .
N #  ##   .
N #  ##   .

O  ###    .
O #   #   .
O #   #   .
O #   #   .
O #   #   .
O #   #   .
O  ###    .

P ####    .
P #   #   .
P #   #   .
P ####    .
P #       .
P #       .
P #       .

Q  ###    .
Q #   #   .
Q #   #   .
Q #   #   .
Q # # #   .
Q #  ##   .
Q  ###    .

R ####    .
R #   #   .
R #   #   .
R ####    .
R # #     .
R #  #    .
R #   #   .

S  ###    .
S #   #   .
S #       .
S  ###    .
S     #   .
S #   #   .
S  ###    .

T #####   .
T   #     .
T   #     .
T   #     .
T   #     .
T   #     .
T   #     .

U #   #   .
U #   #   .
U #   #   .
U #   #   .
U #   #   .
U #   #   .
U  ###    .

V #   #   .
V #   #   .
V #   #   .
V #   #   .
V #   #   .
V  # #    .
V   #     .

W #   #   .
W #   #   .
W #   #   .
W #   #   .
W # # #   .
W ## ##   .
W #   #   .

X #   #   .
X  # #    .
X  # #    .
X   #     .
X  # #    .
X  # #    .
X #   #   .

Y #   #   .
Y #   #   .
Y  # #    .
Y  # #    .
Y   #     .
Y   #     .
Y   #     .

Z #####   .
Z     #   .
Z    #    .
Z   #     .
Z  #      .
Z #       .
Z #####   .

.         .
.         .
.         .
.         .
.         .
.   ##    .
.   ##    .

,         .
,         .
,         .
,         .
,         .
,   ##    .
,  ##     .

          .
          .
          .
          .
          .
          .
          .

:         .
:   ##    .
:   ##    .
:         .
:   ##    .
:   ##    .
:         .

;         .
;   ##    .
;   ##    .
;         .
;   ##    .
;   ##    .
;  #      .

_         .
_         .
_         .
_         .
_         .
_         .
_ #####   .


?  ###    .
? #   #   .
?    #    .
?   #     .
?   #     .
?         .
?   #     .

-         .
-         .
-         .
- #####   .
-         .
-         .
-         .

+         .
+   #     .
+   #     .
+ #####   .
+   #     .
+   #     .
+         .

=         .
=         .
= #####   .
=         .
= #####   .
=         .
=         .


a         .
a         .
a  ###    .
a     #   .
a  ####   .
a #   #   .
a  ####   .

b #       .
b #       .
b #       .
b ####    .
b #   #   .
b #   #   .
b ####    .

c         .
c         .
c  ####   .
c #       .
c #       .
c #       .
c  ####   .

d     #   .
d     #   .
d     #   .
d  ####   .
d #   #   .
d #   #   .
d  ####   .

e         .
e         .
e  ###    .
e #   #   .
e #####   .
e #       .
e  ####   .


f   ###   .
f  #      .
f ####    .
f  #      .
f  #      .
f  #      .
f  #      .

g         .
g         .
g  ####   .
g #   #   .
g  ####   .
g     #   .
g  ###    .

h #       .
h #       .
h #       .
h ####    .
h #   #   .
h #   #   .
h #   #   .

i   #     .
i         .
i   #     .
i   #     .
i   #     .
i   #     .
i   #     .

j     #   .
j         .
j     #   .
j     #   .
j     #   .
j #   #   .
j  ###    .

k #       .
k #       .
k #  #    .
k # #     .
k ##      .
k # #     .
k #  #    .

l #       .
l #       .
l #       .
l #       .
l #       .
l #       .
l  ###    .

m         .
m         .
m ####    .
m # # #   .
m # # #   .
m # # #   .
m # # #   .

n         .
n         .
n ####    .
n #   #   .
n #   #   .
n #   #   .
n #   #   .

o         .
o         .
o  ###    .
o #   #   .
o #   #   .
o #   #   .
o  ###    .

p         .
p         .
p ####    .
p #   #   .
p ####    .
p #       .
p #       .

q         .
q         .
q  ###    .
q #   #   .
q  ####   .
q     #   .
q     #   .

r         .
r         .
r  ####   .
r #       .
r #       .
r #       .
r #       .

s         .
s         .
s  ####   .
s #       .
s  ###    .
s     #   .
s ####    .

t  #      .
t  #      .
t ####    .
t  #      .
t  #      .
t  #      .
t   ###   .

u         .
u         .
u #   #   .
u #   #   .
u #   #   .
u #   #   .
u  ###    .

v         .
v         .
v #   #   .
v #   #   .
v #   #   .
v  # #    .
v   #     .

w         .
w         .
w #   #   .
w #   #   .
w # # #   .
w # # #   .
w  ###    .

x         .
x         .
x #   #   .
x  # #    .
x   #     .
x  # #    .
x #   #   .

y         .
y         .
y #   #   .
y  # #    .
y   #     .
y   #     .
y ##      .

z         .
z         .
z         .
z  ####   .
z    #    .
z   #     .
z  ####   .

(    #    .
(   #     .
(   #     .
(   #     .
(   #     .
(   #     .
(    #    .

)  #      .
)   #     .
)   #     .
)   #     .
)   #     .
)   #     .
)  #      .

[  ####   .
[  #      .
[  #      .
[  #      .
[  #      .
[  #      .
[  ####   .

]  ####   .
]     #   .
]     #   .
]     #   .
]     #   .
]     #   .
]  ####   .

/     #   .
/    #    .
/    #    .
/   #     .
/  #      .
/  #      .
/ #       .

\ #       .
\  #      .
\  #      .
\   #     .
\    #    .
\    #    .
\     #   .

%         .
%         .
% ##  #   .
% ## #    .
%   #     .
%  # ##   .
% #  ##   .

&         .
&  ###    .
& #   #   .
&  # #    .
&  ##     .
& #  #    .
& ### #   .

#         .
#         .
#  # #    .
# #####   .
#  # #    .
# #####   .
#  # #    .

"  #  #   .
"  #  #   .
"         .
"         .
"         .
"         .
"         .

'  #      .
'  #      .
'         .
'         .
'         .
'         .
'         .

!  #      .
!  #      .
!  #      .
!  #      .
!  #      .
!         .
!  #      .

@  ###    .
@ #   #   .
@ # ###   .
@ # # #   .
@ # ###   .
@ #       .
@  ###    .

*         .
* #   #   .
*  # #    .
* #####   .
*  # #    .
* #   #   .
*         .

>         .
> #       .
>  ##     .
>    ##   .
>  ##     .
> #       .
>         .

<         .
<     #   .
<   ##    .
< ##      .
<   ##    .
<     #   .
<         .

$  ###    .
$ # # #   .
$ # #     .
$  ###    .
$   # #   .
$ # # #   .
$  ###    .

|   #     .
|   #     .
|   #     .
|         .
|   #     .
|   #     .
|   #     .

¤         .
¤ #   #   .
¤  ###    .
¤ #   #   .
¤ #   #   .
¤  ###    .
¤ #   #   .

€   ###   .
€  #      .
€ ####    .
€ #       .
€ ####    .
€  #      .
€   ###   .

{   ###   .
{  #      .
{  #      .
{ ##     .
{  #      .
{  #      .
{   ###   .

} ###     .
}    #    .
}    #    .
}    ##   .
}    #    .
}    #    .
} ###     .


^   #     .
^  # #    .
^ #   #   .
^         .
^         .
^         .
^         .

>>>>>> EOF
/Letters


# Get character mask
# --
	P(1)=>char
	offset=1000
	Letters->line
		assert(line.startsWith(char))
		out(line.sub(2,7))
/GetChar


# Get character mask doubled in size
# --
	P(1)=>char
	GetChar(char)->line
		Inner {
			line.chars->c out(c) out(c)
		} _.concat => modLine
		out(modLine)
		out(modLine)
/GetCharX2


# Get text
# --
	P(1,"TEST")=>i
	Lib.Data.each(0,6)->lineNo
		s = Inner {
			(""+i).chars->c
				lines = GetChar(c)
				if (lines.length<7) lines=GetChar("?")
				#break(lines.length<7)
				out(lines.nth(lineNo))
			| _.concat("   ")
		} 
		out(s)
/GetText
	

# Get text x2
# --
	P(1,"TEST")=>s
	GetText(s)->line
		Inner {
			line.chars->c out(c) out(c)
		} _.concat => modLine
		out(modLine)
		out(modLine)
/GetTextX2


# Test 
# --
	P(1,Input("Enter text").get)=>text
	GetText(text)
//t

