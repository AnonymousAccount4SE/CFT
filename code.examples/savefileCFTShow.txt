# License
<<< EOF
#
# CFT - an interactive programmable shell for automation 
# Copyright (C) 2020-2022 Roar Foshaug
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>
#
>>> EOF
/License

<<<<< TEXT
.h Intro

    # CFT: "ConfigTool"
    # Dev since May 2018, on git since 2020
    # GNU GPL 3.0 ("open source")
    # --


    # Script language

    # Shell


.h FUNCTIONS

	1+1
	/two

	Dir.files.length
	/x

	x+two

	?

	:save Test

	@e

	3.14
	/pi




.h HELP

	# List functions in current script
	?

	# Show function code
	?two

	# Global functions
	help

	# Object functions
	Dir help
	Dir.files help
	Dir.files.first help

	# Expressions and statements
	_Expr
	_Stmt

	# List colon commands and shortcuts
	:
	@

	# List scripts
	@scr

	# Show details of another script
	?Lib:
	?Lib:TmpDir


.h Loops

    # Iterate over content, filter or modify

	List(1,2,3)->x out(x+10)

	# Count number of lines of java
	# --
		Dir.allFiles("*.java")->f out(f.read.length) | _.sum
	/javaLines



.h FUNC PARAMS

	# Simple example
	# --
		P(1) => a
		P(2) => b
		a+b
	/sum

	# Defaults
	# --
		P(1,readLine("Value a").parseInt) => a
		P(2,readLine("Value b").parseInt) => b
		a+b
	/sum



.h Shell

    ls, lsd, lsf

    cat, more, edit

    ls
    :N
    edit/cat/more

    @fm

    @S
    @FL

    !dir
    shell



.h Search

    # Projects = Script for searching
    # Multiple projects, fast switching
    # --

    @
    @P

    ?
    ch

    S
    FL

    EditConfig





.h Ext. programs

	Dir.run("cmd","/c","git","status")
	Dir.run("powershell","git","status")

	Lib:run(List("powershell","ls")
	/x

	Util:ShowDict(x)
	x.stdin
	x.stdout
	x.exitCode





>>>>> TEXT
//text



# Process line
# --
    P(1) => line
    P(2) => first
	
    if (line.startsWith(".h")) {
        if (!first) {
            readLine("Enter")
        }
        println(Curses:Clear)
        Inner {
            Letters7x5:GetText(line.sub(2).trim.toUpper)->line 
				str=line #.replace("#","O")
				println(Curses:TxtGreen + str + Curses:Reset)
            |
            println
        }
    } else {
        println(line)
        #Sys.sleep(10)
    }
//ProcessLine


# Show text
# --
    P(1,List) => lines
    first=true
    lines->line 
        ProcessLine(line, first)
        first=false
    |
    "Done"
//Show



# Show text
# --
    Show(text)
/t



