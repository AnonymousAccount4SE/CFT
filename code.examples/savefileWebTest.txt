# Initialize web server on port 2500 - for testing
# --

	Lib.Web.Server(2500).RootContext => Root
		
	Root.GET(Lambda{
		BodyStart
		+
		Sequence(
			@ <h3>Menu</h3>
			@ <p>
			@ <a href="/test">/test</a><br/>
			@ </p>
			@ <p>
			@ <a href="/status">/status</a><br/>
			@ </p>
			@ <p>
			@ <a href="/formtest">/formtest</a><br/>
			@ </p>
		)
		+
		BodyEnd
	})
		
	Root.Context("test")
			.GET(Lambda{
				BodyStart
				+
				List("<h1>File list</h1>") 
				+ 
				Inner {
					Dir.files->file out(file.path + "</br>")
				}
				+ 
				BodyEnd
			})
	Root.Context("status")
		.GET(Lambda{P(1)=>requestObj
			List("<html><body><h1>Headers</h1>") 
			+ 
			Inner {Util:ShowDict(requestObj.headers)->line out(line+"<br/>")}
				+ List("</body></html>")
			})

	Root.Context("formtest")
		.GET(Lambda{P(1)=>requestObj
			BodyStart
			+
			Sequence(
				@ <h1>Formtest</h1>
				@ <form action="/formtest" method="POST">
				@ <input name="a"/>
				@ <input name="b"/>
				@ <input type="submit" value="Submit">
				@ </form>
			)
			+
			BodyEnd
		})
		.POST(Lambda{P(1)=>requestObj
			body=requestObj.body
			if (body != null) {
				# binary
				body=body.toString("UTF-8")
			}
			BodyStart
			+
			Sequence(
				@ <h1>Form POST</h1>
			)
			+ ShowRequest(requestObj)
			#+
			#List("<br/>",body,"</br/>")
			+
			BodyEnd
		})
/Init


# Open Body 
# --
	Sequence(
			@ <html>
			@ <head>
			@ 	<meta charset="utf-8"/>
			@ </head>
			@ <body>
	)
//BodyStart


# Close Body 
# --
	Sequence(
		@ </body>
		@ </html>
	)
//BodyEnd


# Show all data from Request object
# --
	P(1) => req
	
	body=req.body
	if (body==null) {
		body="null"
	} else {
		# Binary value
		body=body.hex
		if (body.length > 50) body=body.sub(0,40) + "..."
	}
	
	List("<h2>.headers</h2>")
	+ ShowDict(req.headers)
	+ List("<h2>.method</h2>",req.method+"<br/>")
	+ List("<h2>.url</h2>",req.url+"<br/>")
	+ List("<h2>.urlParams</h2>")
	+ ShowDict(req.urlParams)
	+ List("<h2>.body</h2>", body, "<br/>")
	+ List("<h2>.bodyParams</h2>")
	+ ShowDict(req.bodyParams)
//ShowRequest


# Show dictionary
# --
	P(1)=>dict
	dict.keys->key
		out(""+key + ": " + dict.get(key) + "<br/>")
//ShowDict

