------------------------------------------------------------------
Generated file - see script file savefileOverview.txt

v1.1.0
------------------------------------------------------------------

Introduction

What CFT is not
 * So what is it for?

CFT as a shell
 * Navigating directories
 |   Listing files or directories only
 * Show content of file

The help system

Base functions and objects: File, Dir and List
 * File() function
 |   Create file
 |   Read file
 |   Append to file
 |   Page through a file
 |   Show bytes of file
 |   Encoding
 * Dir() function
 |   Create a subdirectory
 |   Parent directory
 |   Get files in a directory
 |   Create a file in a directory
 |   Get immediate directories in a directory
 |   Get all files recursively under a directory
 |   Get all directories recursively under a directory:
 |   Delete a sub-directory
 * Lists
 |   List addition

The shell() function

Core types
 * String literals

List processing
 * Iterating over list content
 * Filtering with assert(), reject() and break()
 * The condOut() statement

Creating functions
 * Naming lines of code
 * Calling a function
 * Listing custom functions

Savefiles
 * Save
 * Load
 * Create new empty script
 * The @e shortcut
 * CFT.props - codeDirs

CFT as a functional programming language
 * Code only
 * Local variables
 * Stack vs expressions
 * Nested loops
 * The PIPE symbol
 * "Pipes" and code blocks
 |   Terminates all loops
 * Result value from code blocks
 * Function parameters
 |   Simple example
 |   Asking for missing value

Conditional execution
 * List filtering
 * if() expression
 * when() expression

Block expressions
 * Block expressions are real expressions
 * Pitfalls
 * Full functionality

Running external programs
 * Summary
 * Dir.run()
 * Dir.runCapture()
 * Dir.runDetach()
 * Dir.runProcess()

Editing save files
 * Using editor for entering code
 * Auto reload
 * No auto save!!
 |   Losing changes
 * Multi-line functions
 * Comments
 * First line of function ...
 * Debug

Interactive use
 * Change current directory: cd
 |   Change drive letter in Windows
 |   Paths with space
 * List files: ls
 * Display text file: cat, more, edit
 |   Editing a previous file again
 |   cat, more, edit - implementation
 * Print working directory: pwd
 * Using cd, ls, cat, more and edit in code
 * Get data from user: Input() and readLine()
 * Searching files / report()
 |   FileLine
 |   report()
 |   Multi-line example
 * Grep.file()
 * Grep.lines()
 * Working with huge logs - counting hits
 |   Counting hits
 |   Limiting search to a few files
 * Searching multiple types of file
 * Searching log files / DateSort
 * Generalized sorting
 |   Example: file size
 |   Example: file name
 * Dictionary objects / Dict()
 * Date and time processing
 |   Milliseconds
 |   The Date object
 |   The Date.Duration object
 * Session persistent data / ValDef / Val
 * Synthesis
 |   The problem
 |   Creating code from values
 |   Example using :syn
 |   Example using :NN
 * Repeat last program line
 * Output format / Cfg
 |   The @term shortcut
 |   Line wrapping

Templating
 * Merging text with Dict
 * Using template files
 * Script file "here" documents
 |   A more complex example
 |   PDict()
 * Using DataFile
 |   Include blank lines
 |   Filter away comments

Use as a calculator
 * Expressions and "variables"
 * Lib.Math
 * Lib.Convert
 * Lib.Plot

Various advanced topics
 * Command line args
 * Calling functions in external scripts
 * Protecting directories and files
 * Working with text lines from stdin
 * Differing between Windows and Linux
 * Session state
 * Predicate calls
 * List.push()
 * Dict set strings
 * Dict values as properties
 * Dict.get with default value
 * List.nth() negative indexes
 * Function parameters as List or Dict
 * The general loop statement
 * Storing CFT data structures to file - syn() and eval()
 * String.esc() and .unEsc()
 |   Escape codes
 * Automating interactive functions
 * Self-modifying script
 * Simple line editing
 |   Develop complex code in steps
 * Macros
 |   Simple example
 * CFT.props - mCat, mEdit and mMore macros
 * CFT.props - shortcuts

Example code
 * Windows PowerShell
 * Windows CMD
 * Linux get user name

Reference: Colon commands

Reference: Synthesizable types
