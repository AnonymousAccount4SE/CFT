------------------------------------------------------------------
Generated file - see script file savefileOverview.txt
------------------------------------------------------------------

Introduction

Functionality
 * Another example

Getting help
 * Show all global functions
 * Show functions inside objects

Create functions

Show your functions

Save and load

Edit script file

Shortcuts vs colon commands

CFT as a shell
 * Show content of file
 * Open a file in editor

List basics

Introduction to loops
 * Filtering

Local variables

Files
 * Page through a file
 * Show bytes of file
 * Encoding

Directories
 * Create a subdirectory
 * Parent directory
 * Get files in a directory
 * Create a file in a directory
 * Get immediate directories in a directory
 * Get all files recursively under a directory
 * Get all directories recursively under a directory:
 * Delete a sub-directory
 * Set current directory

The shell() function

Core types
 * String literals
 * Dictionaries

List iteration / filtering
 * Iterating over list content
 * Filtering with assert(), reject() and break() + out()
 * The condOut() statement
 * List addition

Savefiles
 * Save
 * Load
 * Create new empty script
 * The @e shortcut
 * CFT.props - codeDirs

Nested loops

Loop spaces - "pipes"
 * Result value from a loop space
 |   If the loop space contains looping ...
 |   Otherwise ...

Comments

Function parameters

User input

Block expressions
 * Local blocks
 * Lambdas
 * Inner blocks
 * Block expressions summary

Conditionals - if expression
 |   Inline form
 |   Traditional form
 |   Functionally identical
 * if-ladders
 * Lazy evaluation
 |     Lazy if
 |     Lazy AND, OR - &amp;&amp; ||
 |     Lazy P(N,defaultExpr)

The error() function

Output to screen

Protecting files and directories
 * Example
 * No guarantee

Running external programs
 * Summary
 * Dir.run()
 * Dir.runCapture()
 * Dir.runDetach()
 * Dir.runProcessWait()
 |   Lib:run
 |   Doing ssh
 * Dir.runProcess()
 * External Program Status

Session persistent data
 * ValDef
 * Val

Synthesis
 * The problem
 * Creating code from values
 * Example using :syn
 * Example using :NN

Output format / Cfg
 * The @term shortcut
 * Line wrapping

Templating
 * Merging text with Dict
 * Using individual template files
 * Script file "here" documents
 |   A more complex example
 * DataFile
 |   Include blank lines
 |   Filter away comments
 * Sequence() and raw strings
 * PDict()

Use as a calculator
 * Expressions and "variables"
 * Lib.Math
 * Lib.Convert
 * Lib.Plot

Various topics
 * Command line args
 * Calling functions in external scripts
 * Examining external scripts
 * Displaying all scripts
 * Protecting directories and files
 |   A protected directory does not allow
 |   A protected file does not allow
 * Working with pasted text lines from stdin
 * Differing between Windows and Linux
 * Session state
 * Predicate calls
 * Try/catch
 * Get type of value
 * List.push()
 * Dict set with strings
 * Dict fields as functions
 * Dict.get with default value
 * List.nth() negative indexes
 * Function parameters as List or Dict
 * The general loop statement
 * Storing CFT data structures to file - syn() and eval()
 * String .esc() and .unEsc()
 |   Escape codes
 * Automating interactive functions / Sys.stdin()
 * Running colon commands from script code
 * Simple line editing
 |   Develop complex code in steps
 * CFT.props - mCat, mEdit and mMore lambdas
 * CFT.props - shortcuts
 |   Show all shortcuts

Some example code
 * Windows PowerShell
 * Windows CMD
 * Linux get user name

Lib.Text.Lexer
 * Motivation
 * Concept
 * Implementation
 |   .sub()
 * Reusable nodes - integer sequence
 * Processing single lines
 * Processing files
 * Limitations
 * Different uses
 * Complex tokens
 |   Regular Node.addToken() example
 |   Node.addTokenComplex() example

Closures
 * Another example

Primitive objects
 |     Member lambdas calling each other

Reference: Colon commands

Reference: Synthesizable types

Fun and strange stuff, comments
 * Why Input("label").get?
 * Function name AFTER code?
 * Using Sys.stdin to run colon commands etc
 * 2020-09-12 Inner blocks??
 * 2020-09-12 Closures and objects
 * 2020-09-12 A lexical analysis revelation
